conversions:

c = single character

s = null terminated string (of characters)

p = void * (pointer to void) printed in hexadecimal

d = signed int :decimal (base 10) number

i = signed int : number as hexadecimal preceded by 0x, octal if preceded by 0 integer in base 10

u = Print unsigned decimal (base 10) number

x = number in hexadecimal(base 16) in lower case

X = number in hexadecimal(base 16) in upper case

%% prints percent sign

printf - formats and prints data

pseudocode: Take string given, split into text and placeholder to put a, b, c variables seperated by commas 
(ft split?) 
//name list
va_list NAME;
// initialize(start) list;
va_start (NAME, first arg of variadic function)
// go to next arg;
va_arg(0) = first input
//end va_list
va_end

tzuk%d = 12345

1. print printf ignoring "%something" ignoring flags. correct return

// unsigned int print_ints(int num, ...)
// {
// 	va_list args;
// 	va_start(args, num);
// 	va_arg(args, int);
// 	va_end(args);
// }

va_arg(args, int)- for %c, %d, %i
va_arg(args, char*)- %s
va_arg(args, void*)- %p
va_Arg(Args, unsigned int)- %x, %X, %u